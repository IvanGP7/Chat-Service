# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import NameServer_pb2 as NameServer__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2


class NameServerServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetChatParameters = channel.unary_unary(
                '/NameServer_service.NameServerService/GetChatParameters',
                request_serializer=NameServer__pb2.GetChatParametersRequest.SerializeToString,
                response_deserializer=NameServer__pb2.GetChatParametersResponse.FromString,
                )
        self.RegisterClient = channel.unary_unary(
                '/NameServer_service.NameServerService/RegisterClient',
                request_serializer=NameServer__pb2.RegisterClientRequest.SerializeToString,
                response_deserializer=NameServer__pb2.RegisterClientResponse.FromString,
                )
        self.test = channel.unary_unary(
                '/NameServer_service.NameServerService/test',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=NameServer__pb2.testResponse.FromString,
                )


class NameServerServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetChatParameters(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RegisterClient(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def test(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_NameServerServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetChatParameters': grpc.unary_unary_rpc_method_handler(
                    servicer.GetChatParameters,
                    request_deserializer=NameServer__pb2.GetChatParametersRequest.FromString,
                    response_serializer=NameServer__pb2.GetChatParametersResponse.SerializeToString,
            ),
            'RegisterClient': grpc.unary_unary_rpc_method_handler(
                    servicer.RegisterClient,
                    request_deserializer=NameServer__pb2.RegisterClientRequest.FromString,
                    response_serializer=NameServer__pb2.RegisterClientResponse.SerializeToString,
            ),
            'test': grpc.unary_unary_rpc_method_handler(
                    servicer.test,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=NameServer__pb2.testResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'NameServer_service.NameServerService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class NameServerService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetChatParameters(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/NameServer_service.NameServerService/GetChatParameters',
            NameServer__pb2.GetChatParametersRequest.SerializeToString,
            NameServer__pb2.GetChatParametersResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RegisterClient(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/NameServer_service.NameServerService/RegisterClient',
            NameServer__pb2.RegisterClientRequest.SerializeToString,
            NameServer__pb2.RegisterClientResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def test(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/NameServer_service.NameServerService/test',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            NameServer__pb2.testResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
